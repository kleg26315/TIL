-- 1. 학생이름과 주소지를 표시하시오. 단, 출력 헤더는 "학생 이름", "주소지"로 하고,
-- 정렬은 이름으로 오름차순 표시하도록 한다.
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS 주소지
FROM TB_STUDENT
ORDER BY STUDENT_NAME;

-- 2. 휴학중인 학생들의 이름과 주민번호를 나이가 적은 순서로 화면에 출력하시오.
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY STUDENT_SSN DESC;

-- 3. 주소지가 강원도나 경기도인 학생들 중 1900 년대 학번을 가진 학생들의 이름과 학번,
-- 주소를 이름의 오름차순으로 화면에 출력하시오. 단, 출력헤더에는 "학생이름", "학번",
-- "거주지 주소"가 출력되도록 한다.
SELECT STUDENT_NAME "학생이름", STUDENT_NO "학번", STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE (SUBSTR(STUDENT_ADDRESS,1,2) ='강원' OR SUBSTR(STUDENT_ADDRESS, 1,2)='경기')
    AND SUBSTR(STUDENT_NO,1,2) IN ('90','91','92','93','94','95','96','97','98','99')
ORDER BY STUDENT_NAME;

-- 4. 현재 법학과 교수 중 가장 나이가 많은 사람부터 이름을 확인할 수 있는 SQL 문장을
-- 작성하시오. (법학과의 '학과코드'는 학과 테이블(TB_DEPARTMENT)을 조회해서 찾아내도록 하자)
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR TP, TB_DEPARTMENT TD
WHERE TP.DEPARTMENT_NO = TD.DEPARTMENT_NO
    AND TD.DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                         FROM TB_DEPARTMENT
                         WHERE DEPARTMENT_NAME = '법학과')
ORDER BY PROFESSOR_SSN;

-- 5. 2004년 2학기에 'C3118100' 과목을 수강한 학생들의 학점을 조회하려고 한다. 학점이
-- 높은 학생부터 표시하고, 학점이 같으면 학번이 낮은 학생부터 표시하는 구문을 작성해보시오.
SELECT TS.STUDENT_NO, TG.POINT
FROM TB_STUDENT TS, TB_GRADE TG
WHERE TS.STUDENT_NO = TG.STUDENT_NO
    AND TG.CLASS_NO = 'C3118100'
    AND TG.TERM_NO = '200402'
ORDER BY POINT DESC, TS.STUDENT_NO;
    
-- 6. 학생 번호, 학생 이름, 학과 이름을 학생 이름으로 오름차순 정렬하여 출력하는 SQL문을 작성하시오.
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT TS, TB_DEPARTMENT TD
WHERE TS.DEPARTMENT_NO = TD.DEPARTMENT_NO
ORDER BY STUDENT_NAME;

-- 7. 춘 기술대학교의 과목 이름과 과목의 학과 이름을 출력하는 SQL 문장을 작성하시오.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS TC, TB_DEPARTMENT TD
WHERE TC.DEPARTMENT_NO = TD.DEPARTMENT_NO;

-- 8. 과목별 교수 이름을 찾으려고 한다. 과목 이름과 교수 이름을 출력하는 SQL 문을 작성하시오.
SELECT TC.CLASS_NAME, TP.PROFESSOR_NAME
FROM TB_CLASS TC, TB_CLASS_PROFESSOR TCP, TB_PROFESSOR TP
WHERE TC.CLASS_NO = TCP.CLASS_NO
    AND TCP.PROFESSOR_NO = TP.PROFESSOR_NO;
    
-- 9. 8번의 결과 중 '인문사회' 계열에 속한 과목의 교수 이름을 찾으려고 한다.
-- 이에 해당하는 과목 이름과 교수 이름을 출력하는 SQL문을 작성하시오.
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS TC, TB_CLASS_PROFESSOR TCP, TB_PROFESSOR TP, TB_DEPARTMENT TD
WHERE TC.CLASS_NO = TCP.CLASS_NO
    AND TCP.PROFESSOR_NO = TP.PROFESSOR_NO
    AND TD.DEPARTMENT_NO = TC.DEPARTMENT_NO
    AND TD.CATEGORY = '인문사회';
    
-- 10. '음악학과' 학생들의 평점을 구하려고 한다. 음악학과 학생들의 "학번", "학생 이름",
-- "전체 평점"을 출력하는 SQL 문장을 작성하시오. (단, 평점은 소수점 1자리까지만 반올림하여 표시한다.)
SELECT TS.STUDENT_NO 학번, TS.STUDENT_NAME "학생 이름", ROUND(SUM(POINT) / COUNT(POINT) , 1) "전체 평점"
FROM TB_STUDENT TS, TB_DEPARTMENT TD, TB_GRADE TG
WHERE TS.DEPARTMENT_NO = TD.DEPARTMENT_NO
    AND TS.STUDENT_NO = TG.STUDENT_NO
    AND TD.DEPARTMENT_NAME = '음악학과'
GROUP BY TS.STUDENT_NAME, TS.STUDENT_NO
ORDER BY TS.STUDENT_NO;

-- 11. 학번이 A313047 인 학생이 학교에 나오고 있지 않다. 지도 교수에게 내용을 전달하기 위한 학과 이름,
-- 학생 이름과 지도 교수 이름이 필요하다. 이때 사용할 SQL 문을 작성하시오. 단, 출력헤더는 "학과이름",
-- "학생이름", "지도교수이름" 으로 출력되도록 한다.
SELECT DEPARTMENT_NAME 학과이름, STUDENT_NAME 학생이름, PROFESSOR_NAME
FROM TB_PROFESSOR , TB_STUDENT TS, TB_DEPARTMENT TD
WHERE TD.DEPARTMENT_NO = TS.DEPARTMENT_NO
    AND TS.COACH_PROFESSOR_NO = PROFESSOR_NO
    AND TS.STUDENT_NO = 'A313047';

-- 12. 2007년도에 '인간관계론' 과목을 수강한 학생을 찾아 학생이름과 수강학기를 표시하는 SQL 문장을 작성하시오.
SELECT TS.STUDENT_NAME, TG.TERM_NO
FROM TB_STUDENT TS, TB_GRADE TG, TB_CLASS TC
WHERE TS.STUDENT_NO = TG.STUDENT_NO
    AND TC.CLASS_NO = TG.CLASS_NO
    AND SUBSTR(TG.TERM_NO, 1, 4) = '2007'
    AND TC.CLASS_NAME = '인간관계론'
ORDER BY TS.STUDENT_NAME;

-- 13. 예체능 계열 과목 중 과목 담당교수를 한 명도 배정받지 못한 과목을 찾아 그 과목 이름과
-- 학과 이름을 출력하는 SQL 문장을 작성하시오.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS TC, TB_DEPARTMENT TD
WHERE TC.DEPARTMENT_NO = TD.DEPARTMENT_NO
    AND TD.CATEGORY = '예체능';
    
-- ★(LEFT JOIN 유의) 14. 춘 기술대학교 서반아어학과 학생들의 지도교수를 게시하고자 한다. 학생이름과
-- 지도교수 이름을 찾고 만일 지도 교수가 없는 학생일 경우 '지도교수 미지정'으로
-- 표시하도록 하는 SQL문을 작성하시오. 단, 출력헤더는 "학생이름", "지도교수"로
-- 표시하며 고학번 학생이 먼저 표시되도록 한다.
SELECT STUDENT_NAME 학생이름, CASE WHEN TS.COACH_PROFESSOR_NO IS NULL THEN '지도교수 미지정' ELSE TP.PROFESSOR_NAME END 지도교수
FROM TB_STUDENT TS, TB_PROFESSOR TP, TB_DEPARTMENT TD
WHERE TS.DEPARTMENT_NO = TD.DEPARTMENT_NO
    AND TD.DEPARTMENT_NAME = '서반아어학과'
    AND TS.COACH_PROFESSOR_NO = TP.PROFESSOR_NO(+)     
ORDER BY ENTRANCE_DATE;

-- 15. 휴학생이 아닌 학생 중 평점이 4.0 이상인 학생을 찾아 그 학생의 학번, 이름, 학과, 이름, 평점을 출력하는
-- SQL문을 작성하시오.
SELECT TS.STUDENT_NO 학번, TS.STUDENT_NAME 이름, TD.DEPARTMENT_NAME "학과 이름", TRUNC(SUM(POINT) / COUNT(POINT), 6)  평점
FROM TB_DEPARTMENT TD, TB_STUDENT TS, TB_GRADE TG
WHERE TD.DEPARTMENT_NO = TS.DEPARTMENT_NO
    AND TG.STUDENT_NO = TS.STUDENT_NO
    AND TS.ABSENCE_YN = 'N'
GROUP BY TS.STUDENT_NO, TS.STUDENT_NAME, TD.DEPARTMENT_NAME
HAVING SUM(POINT) / COUNT(POINT) >= 4
ORDER BY TS.STUDENT_NO;
    
-- 16. 환경조경학과 전공과목들의 과목 별 평점을 파악할 수 있는 SQL 문을 작성하시오.
SELECT TG.CLASS_NO, TC.CLASS_NAME, TRUNC(AVG(POINT), 8)
FROM TB_GRADE TG, TB_CLASS TC, TB_DEPARTMENT TD
WHERE TG.CLASS_NO = TC.CLASS_NO
    AND TD.DEPARTMENT_NO = TC.DEPARTMENT_NO
    AND TD.DEPARTMENT_NAME = '환경조경학과'
    AND SUBSTR(TC.CLASS_TYPE, 1, 2) = '전공'
GROUP BY TG.CLASS_NO, TC.CLASS_NAME
ORDER BY TG.CLASS_NO;

-- 17. 춘 기술대학교에 다니고 있는 최경희 학생과 같은 과 학생들의 이름과 주소를 출력하는 SQL 문을 작성하시오.
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                       FROM TB_STUDENT
                       WHERE STUDENT_NAME = '최경희');

-- ★(가장 높은 = MAX) 18. 국어국문학과에서 총 평점이 가장 높은 학생의 이름과 학번을 표시하는  SQL문을 작성하시오.
SELECT TS.STUDENT_NO, TS.STUDENT_NAME
FROM TB_STUDENT TS, TB_DEPARTMENT TD, TB_GRADE TG
WHERE TS.DEPARTMENT_NO = TD.DEPARTMENT_NO
    AND TG.STUDENT_NO = TS.STUDENT_NO
    AND TD.DEPARTMENT_NAME = '국어국문학과'
GROUP BY TS.STUDENT_NO, TS.STUDENT_NAME
HAVING SUM(POINT) / COUNT(POINT) IN (SELECT MAX(SUM(POINT) / COUNT(POINT))
                                     FROM TB_STUDENT TS, TB_DEPARTMENT TD, TB_GRADE TG
                                     WHERE TS.DEPARTMENT_NO = TD.DEPARTMENT_NO
                                        AND TG.STUDENT_NO = TS.STUDENT_NO
                                        AND TD.DEPARTMENT_NAME = '국어국문학과'
                                     GROUP BY STUDENT_NAME);

-- 19. 춘 기술대학교의 "환경조경학과"가 속한 같은 계열 학과들의 학과 별 전공과목 평점을
-- 파악하기 위한 적절한 SQL 문을 찾아내시오. 단, 출력헤더는 "계열 학과명", "전공평점"으로 표시되도록 하고,
-- 평점은 소수점 한 자리까지만 반올림하여 표시되도록 한다.
SELECT DEPARTMENT_NAME "계열 학과명", ROUND(SUM(POINT) / COUNT(POINT), 1) "전공평점"
--SUM(POINT) / COUNT(POINT)
FROM TB_DEPARTMENT TD, TB_GRADE TG, TB_CLASS TC
WHERE TD.DEPARTMENT_NO = TC.DEPARTMENT_NO
    AND TD.CATEGORY = (SELECT CATEGORY
                       FROM TB_DEPARTMENT
                       WHERE DEPARTMENT_NAME = '환경조경학과')
    AND SUBSTR(TC.CLASS_TYPE, 1, 2) ='전공'
    AND TC.CLASS_NO = TG.CLASS_NO
GROUP BY DEPARTMENT_NAME
ORDER BY DEPARTMENT_NAME;
