-- 70년대 생(1970~1979) 중 여자이면서 전씨인 사원의 이름과, 주민번호, 부서명, 직급 조회
SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE E, JOB J, DEPARTMENT D
WHERE E.DEPT_CODE = D.DEPT_ID
    AND J.JOB_CODE = E.JOB_CODE
    AND SUBSTR(EMP_NO, 1, 2) IN (70,71,72,73,74,75,76,77,78,79)
    AND SUBSTR(EMP_NO, 8, 1) = '2'
    AND EMP_NAME LIKE '전%';

-- 가장 막내의 사원 코드, 사원 명, 나이, 부서 명, 직급 명 조회
SELECT EMP_ID, EMP_NAME, TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(CONCAT('19',SUBSTR(EMP_NO,1,2)), 'YY')) / 12) "나이", DEPT_TITLE, JOB_NAME
FROM EMPLOYEE E, JOB J, DEPARTMENT D
WHERE E.DEPT_CODE = D.DEPT_ID
    AND J.JOB_CODE = E.JOB_CODE
    AND TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(CONCAT('19',SUBSTR(EMP_NO,1,2)), 'YY')) / 12) 
            IN (SELECT MIN(TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(CONCAT('19',SUBSTR(EMP_NO,1,2)), 'YY')) / 12))
                FROM EMPLOYEE);

-- 이름에 ‘형’이 들어가는 사원의 사원 코드, 사원 명, 직급 조회
SELECT EMP_ID, EMP_NAME, JOB_NAME
FROM EMPLOYEE E, JOB J
WHERE E.JOB_CODE = J.JOB_CODE
    AND EMP_NAME LIKE '%형%';

-- 부서 코드가 D5이거나 D6인 사원의 사원 명, 직급, 부서 코드, 부서 명 조회
SELECT EMP_NAME, JOB_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE E, JOB J, DEPARTMENT D
WHERE E.JOB_CODE = J.JOB_CODE
    AND D.DEPT_ID = E.DEPT_CODE
    AND DEPT_CODE IN ('D5', 'D6');

-- 보너스를 받는 사원의 사원 명, 보너스, 부서 명, 지역 명 조회
SELECT EMP_NAME, BONUS, LOCAL_NAME
FROM EMPLOYEE E, DEPARTMENT D, LOCATION L
WHERE D.LOCATION_ID = L.LOCAL_CODE
    AND E.DEPT_CODE = D.DEPT_ID
    AND BONUS IS NOT NULL
GROUP BY EMP_NAME, BONUS, LOCAL_NAME;

-- 사원 명, 직급, 부서 명, 지역 명 조회
SELECT EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE E, DEPARTMENT D, LOCATION L, JOB J
WHERE D.LOCATION_ID = L.LOCAL_CODE
    AND E.DEPT_CODE = D.DEPT_ID
    AND J.JOB_CODE = E.JOB_CODE;

-- 한국이나 일본에서 근무 중인 사원의 사원 명, 부서 명, 지역 명, 국가 명 조회
SELECT EMP_NAME, DEPT_TITLE, LOCAL_NAME, NATIONAL_NAME
FROM EMPLOYEE E, DEPARTMENT D, LOCATION L, NATIONAL N
WHERE D.LOCATION_ID = L.LOCAL_CODE
    AND E.DEPT_CODE = D.DEPT_ID
    AND N.NATIONAL_CODE = L.NATIONAL_CODE
    AND NATIONAL_NAME IN ('한국','일본');

-- ★ 한 사원과 같은 부서에서 일하는 사원의 이름 조회
SELECT D.EMP_NAME, E.DEPT_CODE, E.EMP_NAME
FROM EMPLOYEE E
JOIN EMPLOYEE D ON(E.DEPT_CODE = D.DEPT_CODE)
WHERE E.EMP_NAME != D.EMP_NAME
ORDER BY 1;

-- 보너스가 없고 직급 코드가 J4이거나 J7인 사원의 이름, 직급, 급여 조회 (NVL 이용)
SELECT EMP_NAME, JOB_NAME, (1+NVL(BONUS,0))*SALARY+(SALARY*12) "급여"
FROM EMPLOYEE E, JOB J
WHERE E.JOB_CODE = J.JOB_CODE
    AND E.JOB_CODE IN ('J4','J7')
    AND BONUS IS NULL;

-- ★(인라인뷰, RANK() OVER) 직원 테이블에서 보너스 포함한 연봉이 높은 5명의
-- 사번, 이름, 부서명, 직급명, 입사일을 조회하세요
SELECT EMP_ID, EMP_NAME, DEPT_TITLE, JOB_NAME, HIRE_DATE, "순위"
FROM (SELECT EMP_ID, EMP_NAME, DEPT_TITLE, JOB_NAME, HIRE_DATE,
    RANK() OVER (ORDER BY 1+NVL(BONUS,0)*SALARY+(SALARY*12) DESC) "순위"
        FROM EMPLOYEE E, JOB J, DEPARTMENT D
        WHERE E.DEPT_CODE = D.DEPT_ID
    AND E.JOB_CODE = J.JOB_CODE)
WHERE 순위 <= 5;
    
-- 부서별 급여 합계가 전체 급여 총 합의 20%보다 많은 부서의 부서명과, 부서별 급여 합계 조회
-- 1) having 사용
SELECT DEPT_TITLE, SUM(SALARY)
FROM DEPARTMENT D, EMPLOYEE E
WHERE D.DEPT_ID = E.DEPT_CODE
GROUP BY DEPT_TITLE
HAVING SUM(SALARY) > (SELECT SUM(SALARY) * 0.2
                     FROM EMPLOYEE);

-- 2) 인라인 뷰 사용
SELECT DEPT_TITLE, "급여 합계"
FROM (SELECT DEPT_TITLE, SUM(SALARY) "급여 합계"
      FROM DEPARTMENT D, EMPLOYEE E
      WHERE D.DEPT_ID = E.DEPT_CODE
      GROUP BY DEPT_TITLE) 
WHERE "급여 합계" > (SELECT SUM(SALARY) * 0.2
                     FROM EMPLOYEE);

-- 3) WITH 사용
WITH TOTAL_SAL AS (SELECT DEPT_TITLE, SUM(SALARY) "급여 합계"
                   FROM DEPARTMENT D, EMPLOYEE E
                   WHERE D.DEPT_ID = E.DEPT_CODE
                   GROUP BY DEPT_TITLE)
SELECT DEPT_TITLE, "급여 합계"
FROM TOTAL_SAL
WHERE "급여 합계" > (SELECT SUM(SALARY) * 0.2
                     FROM EMPLOYEE);